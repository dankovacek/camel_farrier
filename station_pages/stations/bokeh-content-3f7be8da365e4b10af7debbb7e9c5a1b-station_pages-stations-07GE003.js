(function() {
  const fn = function() {
    'use strict';
    (function(root) {
      function now() {
        return new Date();
      }
    
      const force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
    
    const element = document.getElementById("b6c592a6-cab5-40b4-a531-d6f01066d69e");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid 'b6c592a6-cab5-40b4-a531-d6f01066d69e' but no matching script tag was found.")
        }
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error(url) {
          console.error("failed to load " + url);
        }
    
        for (let i = 0; i < css_urls.length; i++) {
          const url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        for (let i = 0; i < js_urls.length; i++) {
          const url = js_urls[i];
          const element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.async = false;
          element.src = url;
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      const js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.6.0.min.js"];
      const css_urls = [];
    
      const inline_js = [    function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        function(Bokeh) {
          (function() {
            const fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                  const docs_json = '{"ddc18b9c-16db-4997-ab0f-b04adcd30354":{"version":"3.6.0","title":"Bokeh Application","roots":[{"type":"object","name":"Figure","id":"p923488","attributes":{"width":1000,"height":500,"x_range":{"type":"object","name":"DataRange1d","id":"p923489"},"y_range":{"type":"object","name":"DataRange1d","id":"p923490"},"x_scale":{"type":"object","name":"LinearScale","id":"p923497"},"y_scale":{"type":"object","name":"LinearScale","id":"p923498"},"title":{"type":"object","name":"Title","id":"p923495"},"renderers":[{"type":"object","name":"TileRenderer","id":"p923522","attributes":{"tile_source":{"type":"object","name":"WMTSTileSource","id":"p923521","attributes":{"url":"https://tile.openstreetmap.org/{z}/{x}/{y}.png","max_zoom":19,"attribution":"&amp;copy; &lt;a href=\\"https://www.openstreetmap.org/copyright\\"&gt;OpenStreetMap&lt;/a&gt; contributors"}}}},{"type":"object","name":"GlyphRenderer","id":"p923530","attributes":{"data_source":{"type":"object","name":"ColumnDataSource","id":"p923524","attributes":{"selected":{"type":"object","name":"Selection","id":"p923525","attributes":{"indices":[],"line_indices":[]}},"selection_policy":{"type":"object","name":"UnionRenderers","id":"p923526"},"data":{"type":"map","entries":[["x",{"type":"typed_array","array":{"type":"bytes","data":""},"order":"little","dtype":"float64"}],["y",{"type":"typed_array","array":{"type":"bytes","data":""},"order":"little","dtype":"float64"}]]}}},"view":{"type":"object","name":"CDSView","id":"p923531","attributes":{"filter":{"type":"object","name":"AllIndices","id":"p923532"}}},"glyph":{"type":"object","name":"Patch","id":"p923527","attributes":{"x":{"type":"field","field":"x"},"y":{"type":"field","field":"y"},"line_color":"#1f77b4","fill_color":"#1f77b4","fill_alpha":0.3}},"nonselection_glyph":{"type":"object","name":"Patch","id":"p923528","attributes":{"x":{"type":"field","field":"x"},"y":{"type":"field","field":"y"},"line_color":"#1f77b4","line_alpha":0.1,"fill_color":"#1f77b4","fill_alpha":0.1,"hatch_alpha":0.1}},"muted_glyph":{"type":"object","name":"Patch","id":"p923529","attributes":{"x":{"type":"field","field":"x"},"y":{"type":"field","field":"y"},"line_color":"#1f77b4","line_alpha":0.2,"fill_color":"#1f77b4","fill_alpha":0.2,"hatch_alpha":0.2}}}},{"type":"object","name":"GlyphRenderer","id":"p923542","attributes":{"data_source":{"type":"object","name":"ColumnDataSource","id":"p923536","attributes":{"selected":{"type":"object","name":"Selection","id":"p923537","attributes":{"indices":[],"line_indices":[]}},"selection_policy":{"type":"object","name":"UnionRenderers","id":"p923538"},"data":{"type":"map"}}},"view":{"type":"object","name":"CDSView","id":"p923543","attributes":{"filter":{"type":"object","name":"AllIndices","id":"p923544"}}},"glyph":{"type":"object","name":"Scatter","id":"p923539","attributes":{"x":{"type":"value","value":-13237701.963020159},"y":{"type":"value","value":7434890.814205524},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"fill_color":{"type":"value","value":"#ff7f0e"},"hatch_color":{"type":"value","value":"#ff7f0e"},"marker":{"type":"value","value":"star"}}},"nonselection_glyph":{"type":"object","name":"Scatter","id":"p923540","attributes":{"x":{"type":"value","value":-13237701.963020159},"y":{"type":"value","value":7434890.814205524},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.1},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.1},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.1},"marker":{"type":"value","value":"star"}}},"muted_glyph":{"type":"object","name":"Scatter","id":"p923541","attributes":{"x":{"type":"value","value":-13237701.963020159},"y":{"type":"value","value":7434890.814205524},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.2},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.2},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.2},"marker":{"type":"value","value":"star"}}}}},{"type":"object","name":"GlyphRenderer","id":"p923552","attributes":{"data_source":{"type":"object","name":"ColumnDataSource","id":"p923546","attributes":{"selected":{"type":"object","name":"Selection","id":"p923547","attributes":{"indices":[],"line_indices":[]}},"selection_policy":{"type":"object","name":"UnionRenderers","id":"p923548"},"data":{"type":"map"}}},"view":{"type":"object","name":"CDSView","id":"p923553","attributes":{"filter":{"type":"object","name":"AllIndices","id":"p923554"}}},"glyph":{"type":"object","name":"Scatter","id":"p923549","attributes":{"x":{"type":"value","value":-13237639.624105314},"y":{"type":"value","value":7434871.22297277},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"fill_color":{"type":"value","value":"#ff7f0e"},"hatch_color":{"type":"value","value":"#ff7f0e"},"marker":{"type":"value","value":"triangle"}}},"nonselection_glyph":{"type":"object","name":"Scatter","id":"p923550","attributes":{"x":{"type":"value","value":-13237639.624105314},"y":{"type":"value","value":7434871.22297277},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.1},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.1},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.1},"marker":{"type":"value","value":"triangle"}}},"muted_glyph":{"type":"object","name":"Scatter","id":"p923551","attributes":{"x":{"type":"value","value":-13237639.624105314},"y":{"type":"value","value":7434871.22297277},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.2},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.2},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.2},"marker":{"type":"value","value":"triangle"}}}}}],"toolbar":{"type":"object","name":"Toolbar","id":"p923496","attributes":{"tools":[{"type":"object","name":"PanTool","id":"p923509"},{"type":"object","name":"WheelZoomTool","id":"p923510","attributes":{"renderers":"auto"}},{"type":"object","name":"BoxZoomTool","id":"p923511","attributes":{"overlay":{"type":"object","name":"BoxAnnotation","id":"p923512","attributes":{"syncable":false,"line_color":"black","line_alpha":1.0,"line_width":2,"line_dash":[4,4],"fill_color":"lightgrey","fill_alpha":0.5,"level":"overlay","visible":false,"left":{"type":"number","value":"nan"},"right":{"type":"number","value":"nan"},"top":{"type":"number","value":"nan"},"bottom":{"type":"number","value":"nan"},"left_units":"canvas","right_units":"canvas","top_units":"canvas","bottom_units":"canvas","handles":{"type":"object","name":"BoxInteractionHandles","id":"p923518","attributes":{"all":{"type":"object","name":"AreaVisuals","id":"p923517","attributes":{"fill_color":"white","hover_fill_color":"lightgray"}}}}}}}},{"type":"object","name":"ResetTool","id":"p923519"},{"type":"object","name":"SaveTool","id":"p923520"}]}},"left":[{"type":"object","name":"MercatorAxis","id":"p923504","attributes":{"ticker":{"type":"object","name":"MercatorTicker","id":"p923505","attributes":{"mantissas":[1,2,5],"dimension":"lat"}},"formatter":{"type":"object","name":"MercatorTickFormatter","id":"p923506","attributes":{"dimension":"lat"}},"major_label_policy":{"type":"object","name":"AllLabels","id":"p923507"}}}],"below":[{"type":"object","name":"MercatorAxis","id":"p923499","attributes":{"ticker":{"type":"object","name":"MercatorTicker","id":"p923500","attributes":{"mantissas":[1,2,5],"dimension":"lon"}},"formatter":{"type":"object","name":"MercatorTickFormatter","id":"p923501","attributes":{"dimension":"lon"}},"major_label_policy":{"type":"object","name":"AllLabels","id":"p923502"}}}],"center":[{"type":"object","name":"Grid","id":"p923503","attributes":{"axis":{"id":"p923499"}}},{"type":"object","name":"Grid","id":"p923508","attributes":{"dimension":1,"axis":{"id":"p923504"}}},{"type":"object","name":"Legend","id":"p923533","attributes":{"background_fill_alpha":0.7,"click_policy":"hide","items":[{"type":"object","name":"LegendItem","id":"p923534","attributes":{"label":{"type":"value","value":"Catchment (2024-06-01) [1]"},"renderers":[{"id":"p923530"}]}},{"type":"object","name":"LegendItem","id":"p923545","attributes":{"label":{"type":"value","value":"Station (2021-01)"},"renderers":[{"id":"p923542"}]}},{"type":"object","name":"LegendItem","id":"p923555","attributes":{"label":{"type":"value","value":"Pour Point (2021-01)"},"renderers":[{"id":"p923552"}]}}]}}]}}]}}';
                  const render_items = [{"docid":"ddc18b9c-16db-4997-ab0f-b04adcd30354","roots":{"p923488":"b6c592a6-cab5-40b4-a531-d6f01066d69e"},"root_ids":["p923488"]}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    let attempts = 0;
                    const timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
    function(Bokeh) {
        }
      ];
    
      function run_inline_js() {
        for (let i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();