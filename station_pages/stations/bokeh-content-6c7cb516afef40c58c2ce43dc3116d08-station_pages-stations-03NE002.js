(function() {
  const fn = function() {
    'use strict';
    (function(root) {
      function now() {
        return new Date();
      }
    
      const force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
    
    const element = document.getElementById("c320b25e-e5f2-4f43-9856-a104d9a1e61b");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid 'c320b25e-e5f2-4f43-9856-a104d9a1e61b' but no matching script tag was found.")
        }
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error(url) {
          console.error("failed to load " + url);
        }
    
        for (let i = 0; i < css_urls.length; i++) {
          const url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        for (let i = 0; i < js_urls.length; i++) {
          const url = js_urls[i];
          const element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.async = false;
          element.src = url;
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      const js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.6.0.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.6.0.min.js"];
      const css_urls = [];
    
      const inline_js = [    function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        function(Bokeh) {
          (function() {
            const fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                  const docs_json = '{"15ad2328-4828-4b78-9f41-e01fd8d195a7":{"version":"3.6.0","title":"Bokeh Application","roots":[{"type":"object","name":"Figure","id":"p193877","attributes":{"width":1000,"height":500,"x_range":{"type":"object","name":"DataRange1d","id":"p193878"},"y_range":{"type":"object","name":"DataRange1d","id":"p193879"},"x_scale":{"type":"object","name":"LinearScale","id":"p193886"},"y_scale":{"type":"object","name":"LinearScale","id":"p193887"},"title":{"type":"object","name":"Title","id":"p193884"},"renderers":[{"type":"object","name":"TileRenderer","id":"p193911","attributes":{"tile_source":{"type":"object","name":"WMTSTileSource","id":"p193910","attributes":{"url":"https://tile.openstreetmap.org/{z}/{x}/{y}.png","max_zoom":19,"attribution":"&amp;copy; &lt;a href=\\"https://www.openstreetmap.org/copyright\\"&gt;OpenStreetMap&lt;/a&gt; contributors"}}}},{"type":"object","name":"GlyphRenderer","id":"p193919","attributes":{"data_source":{"type":"object","name":"ColumnDataSource","id":"p193913","attributes":{"selected":{"type":"object","name":"Selection","id":"p193914","attributes":{"indices":[],"line_indices":[]}},"selection_policy":{"type":"object","name":"UnionRenderers","id":"p193915"},"data":{"type":"map","entries":[["x",{"type":"typed_array","array":{"type":"bytes","data":""},"order":"little","dtype":"float64"}],["y",{"type":"typed_array","array":{"type":"bytes","data":""},"order":"little","dtype":"float64"}]]}}},"view":{"type":"object","name":"CDSView","id":"p193920","attributes":{"filter":{"type":"object","name":"AllIndices","id":"p193921"}}},"glyph":{"type":"object","name":"Patch","id":"p193916","attributes":{"x":{"type":"field","field":"x"},"y":{"type":"field","field":"y"},"line_color":"#1f77b4","fill_color":"#1f77b4","fill_alpha":0.3}},"nonselection_glyph":{"type":"object","name":"Patch","id":"p193917","attributes":{"x":{"type":"field","field":"x"},"y":{"type":"field","field":"y"},"line_color":"#1f77b4","line_alpha":0.1,"fill_color":"#1f77b4","fill_alpha":0.1,"hatch_alpha":0.1}},"muted_glyph":{"type":"object","name":"Patch","id":"p193918","attributes":{"x":{"type":"field","field":"x"},"y":{"type":"field","field":"y"},"line_color":"#1f77b4","line_alpha":0.2,"fill_color":"#1f77b4","fill_alpha":0.2,"hatch_alpha":0.2}}}},{"type":"object","name":"GlyphRenderer","id":"p193931","attributes":{"data_source":{"type":"object","name":"ColumnDataSource","id":"p193925","attributes":{"selected":{"type":"object","name":"Selection","id":"p193926","attributes":{"indices":[],"line_indices":[]}},"selection_policy":{"type":"object","name":"UnionRenderers","id":"p193927"},"data":{"type":"map"}}},"view":{"type":"object","name":"CDSView","id":"p193932","attributes":{"filter":{"type":"object","name":"AllIndices","id":"p193933"}}},"glyph":{"type":"object","name":"Scatter","id":"p193928","attributes":{"x":{"type":"value","value":-6914090.308602183},"y":{"type":"value","value":7626512.404670965},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"fill_color":{"type":"value","value":"#ff7f0e"},"hatch_color":{"type":"value","value":"#ff7f0e"},"marker":{"type":"value","value":"star"}}},"nonselection_glyph":{"type":"object","name":"Scatter","id":"p193929","attributes":{"x":{"type":"value","value":-6914090.308602183},"y":{"type":"value","value":7626512.404670965},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.1},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.1},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.1},"marker":{"type":"value","value":"star"}}},"muted_glyph":{"type":"object","name":"Scatter","id":"p193930","attributes":{"x":{"type":"value","value":-6914090.308602183},"y":{"type":"value","value":7626512.404670965},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.2},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.2},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.2},"marker":{"type":"value","value":"star"}}}}},{"type":"object","name":"GlyphRenderer","id":"p193941","attributes":{"data_source":{"type":"object","name":"ColumnDataSource","id":"p193935","attributes":{"selected":{"type":"object","name":"Selection","id":"p193936","attributes":{"indices":[],"line_indices":[]}},"selection_policy":{"type":"object","name":"UnionRenderers","id":"p193937"},"data":{"type":"map"}}},"view":{"type":"object","name":"CDSView","id":"p193942","attributes":{"filter":{"type":"object","name":"AllIndices","id":"p193943"}}},"glyph":{"type":"object","name":"Scatter","id":"p193938","attributes":{"x":{"type":"value","value":-6914131.496813777},"y":{"type":"value","value":7626478.261073623},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"fill_color":{"type":"value","value":"#ff7f0e"},"hatch_color":{"type":"value","value":"#ff7f0e"},"marker":{"type":"value","value":"triangle"}}},"nonselection_glyph":{"type":"object","name":"Scatter","id":"p193939","attributes":{"x":{"type":"value","value":-6914131.496813777},"y":{"type":"value","value":7626478.261073623},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.1},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.1},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.1},"marker":{"type":"value","value":"triangle"}}},"muted_glyph":{"type":"object","name":"Scatter","id":"p193940","attributes":{"x":{"type":"value","value":-6914131.496813777},"y":{"type":"value","value":7626478.261073623},"size":{"type":"value","value":10},"line_color":{"type":"value","value":"#ff7f0e"},"line_alpha":{"type":"value","value":0.2},"fill_color":{"type":"value","value":"#ff7f0e"},"fill_alpha":{"type":"value","value":0.2},"hatch_color":{"type":"value","value":"#ff7f0e"},"hatch_alpha":{"type":"value","value":0.2},"marker":{"type":"value","value":"triangle"}}}}}],"toolbar":{"type":"object","name":"Toolbar","id":"p193885","attributes":{"tools":[{"type":"object","name":"PanTool","id":"p193898"},{"type":"object","name":"WheelZoomTool","id":"p193899","attributes":{"renderers":"auto"}},{"type":"object","name":"BoxZoomTool","id":"p193900","attributes":{"overlay":{"type":"object","name":"BoxAnnotation","id":"p193901","attributes":{"syncable":false,"line_color":"black","line_alpha":1.0,"line_width":2,"line_dash":[4,4],"fill_color":"lightgrey","fill_alpha":0.5,"level":"overlay","visible":false,"left":{"type":"number","value":"nan"},"right":{"type":"number","value":"nan"},"top":{"type":"number","value":"nan"},"bottom":{"type":"number","value":"nan"},"left_units":"canvas","right_units":"canvas","top_units":"canvas","bottom_units":"canvas","handles":{"type":"object","name":"BoxInteractionHandles","id":"p193907","attributes":{"all":{"type":"object","name":"AreaVisuals","id":"p193906","attributes":{"fill_color":"white","hover_fill_color":"lightgray"}}}}}}}},{"type":"object","name":"ResetTool","id":"p193908"},{"type":"object","name":"SaveTool","id":"p193909"}]}},"left":[{"type":"object","name":"MercatorAxis","id":"p193893","attributes":{"ticker":{"type":"object","name":"MercatorTicker","id":"p193894","attributes":{"mantissas":[1,2,5],"dimension":"lat"}},"formatter":{"type":"object","name":"MercatorTickFormatter","id":"p193895","attributes":{"dimension":"lat"}},"major_label_policy":{"type":"object","name":"AllLabels","id":"p193896"}}}],"below":[{"type":"object","name":"MercatorAxis","id":"p193888","attributes":{"ticker":{"type":"object","name":"MercatorTicker","id":"p193889","attributes":{"mantissas":[1,2,5],"dimension":"lon"}},"formatter":{"type":"object","name":"MercatorTickFormatter","id":"p193890","attributes":{"dimension":"lon"}},"major_label_policy":{"type":"object","name":"AllLabels","id":"p193891"}}}],"center":[{"type":"object","name":"Grid","id":"p193892","attributes":{"axis":{"id":"p193888"}}},{"type":"object","name":"Grid","id":"p193897","attributes":{"dimension":1,"axis":{"id":"p193893"}}},{"type":"object","name":"Legend","id":"p193922","attributes":{"background_fill_alpha":0.7,"click_policy":"hide","items":[{"type":"object","name":"LegendItem","id":"p193923","attributes":{"label":{"type":"value","value":"Catchment (2024-06-01) [1]"},"renderers":[{"id":"p193919"}]}},{"type":"object","name":"LegendItem","id":"p193934","attributes":{"label":{"type":"value","value":"Station (2021-01)"},"renderers":[{"id":"p193931"}]}},{"type":"object","name":"LegendItem","id":"p193944","attributes":{"label":{"type":"value","value":"Pour Point (2021-01)"},"renderers":[{"id":"p193941"}]}}]}}]}}]}}';
                  const render_items = [{"docid":"15ad2328-4828-4b78-9f41-e01fd8d195a7","roots":{"p193877":"c320b25e-e5f2-4f43-9856-a104d9a1e61b"},"root_ids":["p193877"]}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    let attempts = 0;
                    const timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
    function(Bokeh) {
        }
      ];
    
      function run_inline_js() {
        for (let i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();